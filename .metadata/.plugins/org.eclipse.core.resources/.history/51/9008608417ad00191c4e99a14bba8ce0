package testmeapp;

import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

import junit.framework.Assert;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.BeforeClass;

import java.io.File;
import java.io.IOException;
import java.util.Set;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;

public class OnlineShoppingTest 
{
  WebDriver driver;
  ExtentHtmlReporter htmlReporter;
  ExtentReports extent;
  ExtentTest test;
//public void startReportBeforeTest() 
  @BeforeTest
  public void launch()
  {
	  htmlReporter = new ExtentHtmlReporter(System.getProperty("user.dir") +"/test-output/testReport.html");
	  extent = new ExtentReports();
	  extent.attachReporter(htmlReporter);
	  htmlReporter.config().setDocumentTitle("Extent Report Demo");
	  htmlReporter.config().setReportName("Test Report");
	  htmlReporter.config().setTheme(Theme.STANDARD);
	  htmlReporter.config().setTimeStampFormat("EEEE, MMMM dd, yyyy, hh:mm a '('zzz')'");
	  System.setProperty("webdriver.gecko.driver","C:\\Drivers\\geckodriver-v0.24.0-win32\\geckodriver.exe");
	  driver = new FirefoxDriver();
	  driver.get("http://10.232.237.143:443/TestMeApp");
	  driver.manage().window().maximize();
	  
  }
  
   @Test(dataProvider = "dp",priority =2)
   public void testLogin(String n, String s) throws InterruptedException 
   {
	  test = extent.createTest("TC_02","testLogin");
	  WebDriverWait wait = new WebDriverWait(driver,60);
	  wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText("SignIn")));
	  driver.findElement(By.linkText("SignIn")).click();
	  driver.findElement(By.xpath("//input[@name='userName']")).sendKeys(n);
	  driver.findElement(By.xpath("//input[@name='password']")).sendKeys(s);
	  driver.findElement(By.xpath("//input[@name='Login']")).click();
	  Thread.sleep(5000);
	  String expected_link = "SignOut";
	  String actual_link = driver.findElement(By.xpath("//a[contains (text(),'SignOut')]")).getText();
	  System.out.println(expected_link);
	  System.out.println(actual_link);
	  Assert.assertEquals(expected_link,actual_link);
	  System.out.println("successfull login");
   }
  
  @Test (priority=3)
  public void testCart() throws InterruptedException
  {
	  test = extent.createTest("TC_03","testCart");
	  WebDriverWait wait1 = new WebDriverWait(driver,60);
	  wait1.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//span[contains (text(),'Categories')]")));
	  driver.findElement(By.xpath("//input[@id='myInput']")).sendKeys("Head");
	  driver.findElement(By.xpath("//input[@type='submit']")).click();
	  WebDriverWait wait = new WebDriverWait(driver,60);
	  wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//a[contains(text(),'Add to cart')]")));
	  String p_name1 = driver.findElement(By.xpath("//p[text()='Blue tooth head phone']")).getText();
	  System.out.println(p_name1);
	  driver.findElement(By.xpath("//a[contains(text(),'Add to cart')]")).click();
	  Thread.sleep(5000);
	  driver.findElement(By.xpath("//a[@href='displayCart.htm']")).click();
	  String p_name2 = driver.findElement(By.xpath("//p[text()='Blue tooth head phone']")).getText();
	  System.out.println(p_name2);
	  Assert.assertEquals(p_name1,p_name2);
	  System.out.println("Added to cart"); 	
  }
  
  
  @Test (priority=4)
  public void testPayment() throws InterruptedException
  {
	  test = extent.createTest("TC_04","testPayment");
	  driver.findElement(By.xpath("//a[@href='checkout.htm']")).click();
	  driver.findElement(By.xpath("//textarea[@id='add1']")).sendKeys(" ffgrthdjtNJVGjtgjfyjfg");
	  driver.findElement(By.xpath("//input[@value='Proceed to Pay']")).click();
	  Thread.sleep(5000);
	  JavascriptExecutor js = (JavascriptExecutor) driver;
	  js.executeScript("window.scrollBy(0,document.body.scrollHeight)");
//	  Thread.sleep(5000);
	  driver.findElement(By.xpath("//label[text()='Andhra Bank']")).click();
	  driver.findElement(By.xpath("//a[@id='btn']")).click();
	  WebDriverWait wait2 = new WebDriverWait(driver,60);
	  wait2.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//input[@name='username']")));
	  driver.findElement(By.xpath("//input[@name='username']")).sendKeys("123456");
	  driver.findElement(By.xpath("//input[@name='password']")).sendKeys("Pass@456");
	  driver.findElement(By.xpath("//input[@value='LOGIN']")).click();
	  WebDriverWait wait3 = new WebDriverWait(driver,60);
	  wait3.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//input[@name='transpwd']")));
	  Thread.sleep(10000);
	  driver.findElement(By.xpath("//input[@name='transpwd']")).sendKeys("Trans@456");
	  driver.findElement(By.xpath("//input[@value='PayNow']")).click();
	  String order1 = driver.findElement(By.xpath("//p[contains (text(),'Your')]")).getText();
	  System.out.println(order1);
	  String order2 = "Your order has been confirmed ";
	  System.out.println(order2);
	  Assert.assertEquals(order1,order2);
	  System.out.println("ordered succesfully");
  }
  
  @Test (dataProvider="dp",priority=1)
  public void testRegistration(String n,String s) throws InterruptedException
  {
      test = extent.createTest("TC_01","testRegistration");
	    WebDriverWait wait = new WebDriverWait(driver,60);
		wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText("SignUp")));
		driver.findElement(By.xpath("//a[contains (text( ),'SignUp')]")).click();
		Thread.sleep(5000);
	    driver.findElement(By.xpath("//input[@name='userName']")).sendKeys(n);
	    driver.findElement(By.xpath("//input[@name='firstName']")).sendKeys("fvjcgBdv");
	    Thread.sleep(10000);
		String actual_text = driver.findElement(By.xpath("//span[text()='Available']")).getText();
		String expected_text = "Available";
	    System.out.println(expected_text);
	    System.out.println(actual_text);
		   
		Assert.assertEquals(expected_text,actual_text);
		    driver.findElement(By.xpath("//input[@name='lastName']")).sendKeys("dfbghdh");
		    driver.findElement(By.xpath("//input[@name='password']")).sendKeys(s);
		    driver.findElement(By.xpath("//input[@name='confirmPassword']")).sendKeys(s);
		    driver.findElement(By.xpath("//input[@value='Male']")).click();
		    driver.findElement(By.xpath("//input[@name='mobileNumber']")).sendKeys("9239867890");
		    driver.findElement(By.xpath("//input[@name='emailAddress']")).sendKeys("nzdhjzrzdn@gmail.com");
		    driver.findElement(By.xpath("//input[@name='dob']")).sendKeys("07/17/2019");
		    driver.findElement(By.xpath("//textarea[@name='address']")).sendKeys(" ffgrtdjtjtgjfyjfg");
		    WebElement question =  driver.findElement(By.xpath("//select[@name='securityQuestion']"));
		    Select Ques1 = new Select(question);
			Ques1.selectByIndex(1);
		    driver.findElement(By.xpath("//input[@name='answer']")).sendKeys("Black");
		    driver.findElement(By.xpath("//input[@name='Submit']")).click();
		    Thread.sleep(5000);
		    String actual_msg = driver.findElement(By.xpath("//div[contains (text(),' User Registered Succesfully!!! Please login')]")).getText();
		    String expected_msg = "User Registered Succesfully!!! Please login";
		    System.out.println(expected_msg);
		    System.out.println(actual_msg);
		    
		    Assert.assertEquals(expected_text,actual_text);
		    System.out.println("Registration successful");
			Thread.sleep(10000);
  }
  
  @DataProvider
  public Object[][] dp() {
    return new Object[][] {
      //new Object[] { "mbczkhfs", "mnbvcxz" },
      new Object[] { "fgmnzx", "mnbvcxz" },
    };
 }
  
  @AfterMethod
  public void getResultAfterMethod(ITestResult result) throws IOException
  {
	  if(result.getStatus()==ITestResult.FAILURE)
	  {
		  test.log(Status.FAIL,MarkupHelper.createLabel(result.getName()+"FAILED", ExtentColor.RED));
		  TakesScreenshot snapshot = (TakesScreenshot)driver;
		  File src = snapshot.getScreenshotAs(OutputType.FILE);
		  String Path = System.getProperty("user.dir") +"/test-output/screens/"+result.getName()+".png";
		  FileUtils.copyFile(src,new File(Path));
		  test.fail(result.getThrowable());
	  }
	  else if(result.getStatus() == ITestResult.SUCCESS)
	  {
		  test.log(Status.PASS,MarkupHelper.createLabel(result.getName()+"PASSED", ExtentColor.GREEN));
	  }
	  else
	  {
		  test.log(Status.SKIP,MarkupHelper.createLabel(result.getName()+"SKIPPED", ExtentColor.ORANGE));
		  test.skip (result.getThrowable());
	  } 
  }

  @AfterTest
  public void endReportAfterTest() 
  {
	  extent.flush();
  }

}
